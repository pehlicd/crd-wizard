name: release

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.0.0'

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install npm dependencies
        working-directory: ./ui
        run: npm ci --force

      - name: Build and embed UI
        run: make build-ui-and-embed

      - name: "Import GPG key"
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: "Commit and push changes"
        uses: stefanzweifel/git-auto-commit-action@v6
        id: commit
        with:
          branch: main
          commit_author: "${{ steps.import-gpg.outputs.name }} <${{ steps.import-gpg.outputs.email }}>"
          commit_user_name: ${{ steps.import-gpg.outputs.name }}
          commit_user_email: ${{ steps.import-gpg.outputs.email }}
          commit_message: "build(release): release ${{ github.ref_name }}"
          push_options: "--force"

      - name: Move tag to the new commit
        if: startsWith(github.ref, 'refs/tags/') && steps.commit.outputs.changes_detected == 'true'
        run: |
          git tag -f ${{ github.ref_name }} ${{ steps.commit.outputs.commit_hash }}
          git push --force origin refs/tags/${{ github.ref_name }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  containerize:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: crd-wizard-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=sha,prefix=
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.crd-wizard-meta.outputs.tags }}
          labels: ${{ steps.crd-wizard-meta.outputs.labels }}
  #      - name: Update new version in krew-index
  #        uses: rajatjindal/krew-release-bot@v0.0.47
